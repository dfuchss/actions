name: Build and/or Deploy Maven Projects

on:
  workflow_call:
    inputs:
        with-submodules:
          description: "Clone repository with its submodules"
          type: boolean
          required: false
          default: false
        deploy:
          description: "Switch to enable or disable the deployment process"
          type: boolean
          required: true
        runs-on:
          description: "Tag for the runner to use in the main job."
          type: string
          required: false
          default: "ubuntu-latest"

    secrets:
      OSSRH_USER:
        required: true
      OSSRH_TOKEN:
        required: true
      GPG_KEY:
        required: true
          
jobs:
  pre_job:
    name: "Check for duplicate jobs"
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: 'same_content_newer'
          skip_after_successful_duplicate: 'true'
          
  build:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    name: "Build and/or Deploy"
    runs-on: ${{ inputs.runs-on }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: ${{ inputs.with-submodules }}

    - name: Java with Cache
      uses: actions/setup-java@v4
      if: ${{ !inputs.deploy }}
      with:
        java-version: 21
        distribution: 'temurin'
        cache: 'maven'


    - name: Java without Cache
      uses: actions/setup-java@v4
      if: ${{ inputs.deploy }}
      with:
        java-version: 21
        distribution: 'temurin'

    - name: Maven Verify
      shell: bash
      run: mvn -U -B verify

    - name: Set maven settings.xml
      uses: whelk-io/maven-settings-xml-action@v22
      if: ${{ inputs.deploy }}
      with:
        servers: '[{ "id": "ossrh", "username": "${{ secrets.OSSRH_USER }}", "password": "${{ secrets.OSSRH_TOKEN }}" }]'

    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v6
      if: ${{ inputs.deploy }}
      with:
        gpg_private_key: ${{ secrets.GPG_KEY }}

    - name: Publish Package
      if: ${{ inputs.deploy }}
      shell: bash
      run: mvn -DskipTests -P deployment -U -B deploy
